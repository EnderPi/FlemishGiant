- Allow user to browse seed effects
- Split out clors of different bytes in randomness visual
- configure said colors and such
- configure tests
- have hash mode
- allow arbitrary output or state functions (expression)
- allow arbitrary restrictions, like "must include XOR"
- unit test for randomHash - trivial pass GCD and gorilla test
- push the round function of the cryptographic has harder - see when, if at all, it fails as a 64-bit hash RNG
- Tab to just do randomness tests, allow user to code a state transition and an output
- Allow user to make custom tournament probabilities, even negative selection
- species explorer (view graph, specs, failes/passed tests)
- add nextlong to randomnumbergeenerator API (divide ulong by 2, reflect it?)
- Add special functions?
- Add something like logging to the application?  Probably doesn't need saved to the file.
- remove cost from the treenode class, needs to be abstracted as a visitor class.
- Animator for seed changes in species explorer - set min, set max, roll.....
- Increase unit test coverage
- Allow user to view average fitness/generation
- save/load
- warn on close
- disable form while running
- change up for 32-bit rngs?
- feistel rngs
- get constants, like birthdasy empirical, uniformity, etc
- overall stats for tests passed, failed (shows which tests are useful)
- overall stats on operations, node counts, etc.
- Clear results on start.
